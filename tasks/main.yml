---
# tasks file for egeneralov.docker


- name: "verify : daemon.json"
  assert:
    that: "[{% for key in daemon_json.keys() %}{% if key in daemon_json_allowed_keys %}True{% else %}, False{% endif %}{% endfor %}]"
    fail_msg: "Failed to check keys for daemon.json"
    success_msg: "root-level keys are valid"


- name: "install : system-wide packages"
  apt:
    name:
      - ca-certificates
      - apt-transport-https
      - debian-archive-keyring
      - python-pip
    update_cache: yes
    cache_valid_time: 3600
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2


- name: "install : python library"
  pip:
    name: docker[tls]
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2


- name: "import : apt_key"
  apt_key:
    url: "{{ download_url }}/gpg"
  register: key
  until: key is success
  retries: 10
  delay: 2


- name: "import : apt_repo"
  apt_repository:
    repo: "deb [arch=amd64] {{ download_url }} {{ ansible_distribution_release | lower }} {{ release_channel }}"
    filename: docker
  register: repo
  until: repo is success
  retries: 10
  delay: 2


- name: "install : docker-{{ type }}"
  apt:
    name: "docker-{{ type }}"
    update_cache: "{% if key is changed or repo is changed %}yes{% else %}no{% endif %}"
    cache_valid_time: 3600
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2


- name: "configure : daemon.json"
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  register: tpl_daemon


- name: "configure (re)start docker"
  systemd:
    name: docker.service
    state: "{% if tpl_daemon is changed %}re{% endif %}started"


- name: "configure : registry"
  docker_login:
    registry: "{{ item.registry | default(omit) }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
  with_items: "{{ registry }}"
